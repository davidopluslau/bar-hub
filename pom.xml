<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>jar</packaging>

  <groupId>com.davidopluslau</groupId>
  <artifactId>bar-hub</artifactId>
  <name>bar-hub</name>
  <url>https://github.com/davidopluslau/bar-hub</url>
  <version>0.0.1</version>

  <scm>
    <url>https://github.com/davidopluslau/bar-hub</url>
    <developerConnection>scm:git@github.com:davidopluslau/bar-hub.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>davidopluslau</id>
      <email>davidopluslau@gmail.com</email>
      <name>David Lau</name>
    </developer>
  </developers>

  <properties>
    <service.mainClass>com.networknt.server.Server</service.mainClass>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>

    <maven.deploy.skip>true</maven.deploy.skip>
    <source.skip>true</source.skip>

    <!-- Quality -->
    <checkstyle.violationSeverity>warning</checkstyle.violationSeverity>
    <jacoco.minimum-coverage>0.80</jacoco.minimum-coverage>

    <!-- dependency versions (application) -->
    <versions.postgresql-connector>42.3.3</versions.postgresql-connector>
    <versions.hikaricp>3.3.0</versions.hikaricp>
    <versions.google-cloud-core>1.61.0</versions.google-cloud-core>
    <versions.auto-matter>0.15.1</versions.auto-matter>
    <versions.completable-futures>0.3.2</versions.completable-futures>
    <versions.semantic-metrics>1.0.2</versions.semantic-metrics>
    <versions.jackson>2.9.8</versions.jackson>
    <versions.caffeine>2.7.0</versions.caffeine>
    <versions.jooq>3.11.11</versions.jooq>

    <!-- dependency versions (framework) -->
    <versions.light-4j>2.0.0</versions.light-4j>
    <versions.light-rest-4j>${versions.light-4j}</versions.light-rest-4j>
    <versions.openapi-parser>${versions.light-4j}</versions.openapi-parser>
    <versions.json-schema-validator>1.0.1</versions.json-schema-validator>
    <versions.undertow>2.0.16.Final</versions.undertow>
    <versions.fastscanner>2.18.1</versions.fastscanner>

    <db.name>bar_hub</db.name>
    <db.user>bar_hub</db.user>
    <db.pass>bar_hub</db.pass>
    <db.host>localhost</db.host>
    <db.port>54320</db.port>

    <!-- dependency versions (logging) -->
    <versions.log4j>2.11.1</versions.log4j>
    <versions.slf4j>1.7.25</versions.slf4j>

    <!-- dependency versions (testing) -->
    <versions.junit.jupiter>5.3.2</versions.junit.jupiter>
    <versions.junit.platform>1.3.2</versions.junit.platform>
    <versions.mockito-core>2.23.4</versions.mockito-core>
    <versions.testcontainers>1.10.6</versions.testcontainers>

  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${versions.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${versions.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${versions.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${versions.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${versions.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.google.http-client</groupId>
        <artifactId>google-http-client</artifactId>
        <version>1.28.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Application dependencies -->

    <!-- data serialization -->
    <dependency>
      <groupId>io.norberg</groupId>
      <artifactId>auto-matter</artifactId>
      <version>${versions.auto-matter}</version>
    </dependency>
    <dependency>
      <groupId>io.norberg</groupId>
      <artifactId>auto-matter-jackson</artifactId>
      <version>${versions.auto-matter}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>

    <!-- light-4j framework -->
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>config</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>utility</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>security</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>client</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>audit</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>info</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>health</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>status</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>exception</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>body</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>mask</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>metrics</artifactId>
      <version>1.5.17</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>handler</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>sanitizer</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>traceability</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>correlation</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>service</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>registry</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>balance</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>cluster</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>consul</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>server</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>cors</artifactId>
      <version>${versions.light-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>openapi-meta</artifactId>
      <version>${versions.light-rest-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>openapi-security</artifactId>
      <version>${versions.light-rest-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>openapi-validator</artifactId>
      <version>${versions.light-rest-4j}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>json-schema-validator</artifactId>
      <version>${versions.json-schema-validator}</version>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>openapi-parser</artifactId>
      <version>${versions.openapi-parser}</version>
    </dependency>

    <!-- https://www.jooq.org/ -->
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>${versions.jooq}</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
      <version>${versions.jooq}</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
      <version>${versions.jooq}</version>
    </dependency>


    <!-- https://github.com/brettwooldridge/HikariCP -->
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${versions.hikaricp}</version>
    </dependency>

    <!-- Postgres driver -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${versions.postgresql-connector}</version>
    </dependency>


    <!-- Web Server -->
    <dependency>
      <groupId>io.undertow</groupId>
      <artifactId>undertow-core</artifactId>
      <version>${versions.undertow}</version>
    </dependency>

    <!-- Other -->
    <dependency>
      <groupId>io.github.lukehutch</groupId>
      <artifactId>fast-classpath-scanner</artifactId>
      <version>${versions.fastscanner}</version>
    </dependency>

    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.3.1</version>
    </dependency>

    <!-- Logging-->

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${versions.slf4j}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${versions.log4j}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${versions.log4j}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${versions.log4j}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>${versions.junit.platform}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${versions.junit.jupiter}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${versions.junit.jupiter}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${versions.junit.jupiter}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${versions.mockito-core}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${versions.mockito-core}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${versions.testcontainers}</version>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${versions.testcontainers}</version>
    </dependency>

  </dependencies>

  <build>
    <defaultGoal>verify</defaultGoal>
    <directory>target</directory>
    <!--<finalName>${project.artifactId}</finalName>-->

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.5</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.0.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.4</version>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <showWarnings>true</showWarnings>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <compilerArgs>
            <arg>-XDcompilePolicy=simple</arg>
            <!--
            all flags to errorprone should be passed in the same <arg> as -Xplugin.
            Annoyingly, java8 requires these to be on the same line and won't allow newlines.
            -->
            <arg>-Xplugin:ErrorProne -XepDisableWarningsInGeneratedCode
              -XepExcludedPaths:.*/generated-(test-)?sources/.* -Xep:Var:OFF -Xep:StaticOrDefaultInterfaceMethod:OFF
              -Xep:NullableDereference:OFF
            </arg>
            <arg>-Xlint:cast</arg>
            <arg>-Xlint:divzero</arg>
            <arg>-Xlint:empty</arg>
            <arg>-Xlint:fallthrough</arg>
            <arg>-Xlint:finally</arg>
            <arg>-Xlint:overrides</arg>
            <arg>-Xlint:path</arg>
            <arg>-Xlint:unchecked</arg>
            <arg>-Xlint:-options</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>2.3.2</version>
            </path>
            <path>
              <groupId>io.norberg</groupId>
              <artifactId>auto-matter</artifactId>
              <version>${versions.auto-matter}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${versions.jooq}</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>

        <!-- This is a minimal working configuration. See the manual's section about the code generator for more details -->
        <configuration>
          <jdbc>
            <driver>org.postgresql.Driver</driver>
            <!--suppress UnresolvedMavenProperty -->
            <url>jdbc:postgresql://${db.host}:${db.port}/${db.name}?ssl=false</url>
            <user>${db.user}</user>
            <password>${db.user}</password>
          </jdbc>
          <generator>
            <name>org.jooq.codegen.JavaGenerator</name>
            <database>
              <includes>.*</includes>
              <excludes>databasechangelog.*</excludes>
              <inputSchema>bar_hub</inputSchema>
              <outputSchemaToDefault>true</outputSchemaToDefault>
              <!--<orderProvider>com.example.CaseInsensitiveOrderProvider</orderProvider>-->

              <!-- https://www.jooq.org/doc/3.11/manual/code-generation/codegen-advanced/codegen-config-database/codegen-database-unsigned-types/ -->
              <unsignedTypes>false</unsignedTypes>

              <!-- https://www.jooq.org/doc/3.11/manual/code-generation/custom-data-types/ -->
              <!-- https://www.jooq.org/doc/3.11/manual/sql-execution/fetching/data-type-conversion/ -->
              <forcedTypes>
                <forcedType>
                  <userType>java.time.LocalDate</userType>
                  <converter>com.davidopluslau.barhub.db.converters.CalendarConverter</converter>
                  <expression>.*_DATE</expression>
                  <types>.*</types>
                </forcedType>
              </forcedTypes>

            </database>
            <generate>
              <pojos>true</pojos>
              <daos>true</daos>
            </generate>
            <target>
              <packageName>com.davidopluslau.barhub.db.generated</packageName>
              <directory>target/generated-sources/generated</directory>
            </target>

            <!-- https://www.jooq.org/doc/3.11/manual/code-generation/codegen-matcherstrategy/ -->
            <strategy>
              <matchers>
                <tables>
                  <table>
                    <!-- Expression is omitted. This will make this rule apply to all tables -->
                    <tableIdentifier>
                      <transform>UPPER</transform>
                      <expression>$0_TABLE</expression>
                    </tableIdentifier>
                    <tableClass>
                      <transform>PASCAL</transform>
                      <expression>$0_TABLE</expression>
                    </tableClass>
                  </table>
                  <table>
                    <!-- Make the following tables' POJO objects implement Entity -->
                    <expression>
                      insight|report
                    </expression>
                    <pojoExtends>com.davidopluslau.barhub.db.pojos.AbstractEntity</pojoExtends>
                  </table>
                </tables>
              </matchers>
            </strategy>
          </generator>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.2</version>
        <configuration>
          <excludes>
            <exclude>**/*Builder.*</exclude>
            <exclude>**/*Value.*</exclude>
            <exclude>**/*Factory.*</exclude>
            <exclude>**/di/*</exclude>
            <exclude>**/proto/*</exclude>
            <exclude>**/model/*</exclude>
            <exclude>**/mojo/*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <maxAllowedViolations>50</maxAllowedViolations>
          <violationSeverity>${checkstyle.violationSeverity}</violationSeverity>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4.1</version>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.1</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>**/*IT.java</include>
            <include>**/integrationtests/*.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              <mainClass>${service.mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <id>generate-openapi-json</id>
            <phase>compile</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.davidopluslau.barhub.mojo.YamlToJsonConverter</mainClass>
            </configuration>
          </execution>
          <execution>
            <id>run-server</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-jar</argument>
                <argument>target/${project.build.finalName}.jar</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>quick</id>
      <activation>
        <!--<activeByDefault>true</activeByDefault>-->
        <property>
          <name>quick</name>
        </property>
      </activation>
      <properties>
        <checkstyle.skip>true</checkstyle.skip>
        <findbugs.skip>true</findbugs.skip>
        <jacoco.skip>true</jacoco.skip>
      </properties>
    </profile>
  </profiles>
</project>
